generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("COCKROACH_PRISMA_DATABASE_URL")
}

model Chat {
  telegramId BigInt @id
  Tag        Tag[]
  User       User[]
}

model Tag {
  id             Int    @id @default(sequence())
  tag            String
  chatTelegramId BigInt
  chat           Chat   @relation(fields: [chatTelegramId], references: [telegramId])
  users          User[]

  @@unique([tag, chatTelegramId])
}

model User {
  id               Int     @id @default(sequence())
  telegramId       BigInt
  displayName      String
  telegramUsername String?
  tags             Tag[]
  chatTelegramId   BigInt
  chat             Chat    @relation(fields: [chatTelegramId], references: [telegramId])

  countersId Int?
  counters   Counters?

  achievements Achievements[]

  @@unique([telegramUsername, chatTelegramId])
  @@unique([telegramId, chatTelegramId])
  @@unique([displayName, chatTelegramId])
}

model Counters {
  id Int @id @default(sequence())

  telegramUserId BigInt
  telegramChatId BigInt

  user User @relation(fields: [telegramChatId, telegramUserId], references: [chatTelegramId, telegramId])

  isItHypeCounter Int @default(0)
  @@unique([telegramChatId, telegramUserId])
}

enum Achievement {
  IsItHype
  SensorsAreShit
}

model Achievements {
  id Int @id @default(sequence())

  telegramUserId BigInt
  telegramChatId BigInt

  user User @relation(fields: [telegramChatId, telegramUserId], references: [chatTelegramId, telegramId])

  achievements Achievement[]
}
